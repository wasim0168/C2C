<%- include('../partials/header', { user, product }) %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.0.1/js/bootstrap.min.js" crossorigin="anonymous"></script>

<% if (!product) { %>
  <div class="container my-5">
    <div class="alert alert-warning">
      <h4><i class="bi bi-exclamation-triangle"></i> Product Not Available</h4>
      <p>The product you're looking for has been removed or doesn't exist.</p>
      <div class="mt-3">
        <a href="/" class="btn btn-primary me-2"><i class="bi bi-house"></i> Browse Products</a>
      </div>
    </div>
  </div>
<% } else { %>
  <div class="container my-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/search?category=<%= product.category %>"><%= product.category %></a></li>
        <li class="breadcrumb-item active" aria-current="page"><%= product.title %></li>
      </ol>
    </nav>

    <!-- Product Details -->
    <div class="card mb-4 shadow-sm p-3">
      <div class="row g-4 align-items-start">
        <!-- Left: Image/Carousel -->
        <div class="col-md-6">
          <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner rounded">
              <div class="carousel-item active">
                <img src="/uploads/<%= product.image %>" class="d-block w-50 h-50 mx-auto" alt="<%= product.title %>" style="object-fit: cover; height: 350px;">
              </div>
              <% if (product.additionalImages && product.additionalImages.length > 0) { %>
                <% product.additionalImages.forEach((image, index) => { %>
                  <div class="carousel-item">
                    <img src="/uploads/<%= image %>" class="d-block w-50 h-50 mx-auto" alt="Additional image <%= index + 1 %>" style="object-fit: cover; height: 350px;">
                  </div>
                <% }) %>
              <% } %>
            </div>

            <% if (product.additionalImages && product.additionalImages.length > 0) { %>
              <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon"></span>
                <span class="visually-hidden">Previous</span>
              </button>
              <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon"></span>
                <span class="visually-hidden">Next</span>
              </button>
            <% } %>
          </div>
        </div>

        <!-- Right: Product Info -->
        <div class="col-md-6">
          <h3 class="fw-bold"><%= product.title %></h3>
          <p class="text-muted mb-2">Category: <%= product.category %></p>
          <p class="text-secondary"><%= product.description %></p>
          <h4 class="text-success">₹<%= product.price %></h4>
          <p class="mb-1"><strong>Seller:</strong> <%= product.user_name %></p>
          <hr>
          <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#chatModal">
            <i class="bi bi-chat-dots fs-5"></i> Chat with seller
          </button>
        </div>
      </div>
    </div>

    <!-- Similar Products -->
    <% if (similarProducts.length > 0) { %>
      <div class="row mt-5">
        <div class="col-12">
          <h4>Similar Products</h4>
          <div class="row">
            <% similarProducts.forEach(product => { %>
              <div class="col-md-3 mb-4">
                <div class="card h-100 shadow-sm">
                  <img src="/uploads/<%= product.image %>" class="card-img-top" alt="<%= product.title %>" style="height: 180px; object-fit: cover;">
                  <div class="card-body">
                    <h6 class="card-title"><%= product.title %></h6>
                    <p class="text-muted small"><%= product.category %></p>
                    <p class="fw-bold text-success">₹<%= product.price %></p>
                    <a href="/products/<%= product.id %>" class="btn btn-outline-primary btn-sm w-100">View</a>
                  </div>
                </div>
              </div>
            <% }) %>
          </div>
        </div>
      </div>
    <% } %>
  </div>
<% } %>

<!-- Chat Modal -->
<div class="modal fade" id="chatModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title">
          <i class="bi bi-chat-dots-fill"></i> Chat with <%= product.user_name %>
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body p-0">
        <div class="chat-container">
          <div class="chat-header p-3 border-bottom">
            <div class="d-flex align-items-center">
              <img src="/uploads/<%= product.image %>" class="chat-product-img rounded me-3" alt="<%= product.title %>">
              <div>
                <h6 class="mb-0"><%= product.title %></h6>
                <small class="text-muted">₹<%= product.price %></small>
              </div>
            </div>
          </div>
          <div class="chat-messages p-3" id="chatMessages"></div>
          <div class="chat-input p-3 border-top">
            <form id="chatForm" class="d-flex">

              <input type="hidden" id="productId" value="<%= product.id %>">
              <input type="hidden" id="receiverId" value="<%= product.user_id %>">
              <input type="text" id="messageInput" class="form-control me-2" placeholder="Type your message..." required>
              <button type="submit" class="btn btn-primary">
                <i class="bi bi-send-fill"></i>
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- rating  -->

<!-- Rating Section -->
<div class="card mb-4 shadow-sm p-3">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="mb-0">Product Ratings</h4>
    <div class="d-flex align-items-center">
      <div class="me-2">
        <span id="averageRating" class="fw-bold fs-3">0.0</span>
        <span class="text-muted">/5.0</span>
      </div>
      <div class="rating-stars fs-4" id="averageStars">
        <!-- Stars will be inserted here by JavaScript -->
      </div>
      <small class="text-muted ms-2" id="ratingCount">(0 reviews)</small>
    </div>
  </div>

  <% if (user) { %>
    <div class="card mb-3 p-3">
      <h5>Rate this product</h5>
      <form id="ratingForm">
        <input type="hidden" name="productId" value="<%= product.id %>">
        <div class="mb-3">
          <div class="rating-input">
            <input type="radio" id="star5" name="rating" value="5" required>
            <label for="star5" title="5 stars">★</label>
            <input type="radio" id="star4" name="rating" value="4">
            <label for="star4" title="4 stars">★</label>
            <input type="radio" id="star3" name="rating" value="3">
            <label for="star3" title="3 stars">★</label>
            <input type="radio" id="star2" name="rating" value="2">
            <label for="star2" title="2 stars">★</label>
            <input type="radio" id="star1" name="rating" value="1">
            <label for="star1" title="1 star">★</label>
          </div>
        </div>
        <div class="mb-3">
          <label for="comment" class="form-label">Your review (optional)</label>
          <textarea class="form-control" id="comment" name="comment" rows="3"></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Rating</button>
      </form>
    </div>
  <% } else { %>
    <div class="alert alert-info">
      <a href="/auth/login" class="alert-link">Login</a> to rate this product
    </div>
  <% } %>

  <div id="ratingsList">
    <!-- Ratings will be loaded here -->
  </div>
</div>

<!-- Chat Script -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const currentUserId = '<%= user?.id %>';

  if (currentUserId) socket.emit('register', currentUserId);

  const chatModal = document.getElementById('chatModal');
  chatModal.addEventListener('show.bs.modal', async function () {
    const productId = document.getElementById('productId').value;
    const receiverId = document.getElementById('receiverId').value;

    try {
      const response = await fetch(`/api/messages?productId=${productId}&otherUserId=${receiverId}`);
      const messages = await response.json();

      const chatMessages = document.getElementById('chatMessages');
      chatMessages.innerHTML = '';

      messages.forEach(msg => appendMessage(msg));
      chatMessages.scrollTop = chatMessages.scrollHeight;
    } catch (error) {
      console.error('Error loading messages:', error);
    }
  });

  socket.on('newMessage', (message) => {
    const currentProductId = document.getElementById('productId')?.value;
    const currentReceiverId = document.getElementById('receiverId')?.value;

    if ((message.senderId == currentReceiverId || message.receiverId == currentReceiverId) &&
      message.productId == currentProductId) {
      appendMessage(message);
      document.getElementById('chatMessages').scrollTop = chatMessages.scrollHeight;
    }
  });

  document.getElementById('chatForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const messageInput = document.getElementById('messageInput');
    const productId = document.getElementById('productId').value;
    const receiverId = document.getElementById('receiverId').value;

    if (messageInput.value.trim() && currentUserId) {
      socket.emit('sendMessage', {
        senderId: currentUserId,
        receiverId: receiverId,
        productId: productId,
        message: messageInput.value.trim()
      });

      messageInput.value = '';
    }
  });

  function appendMessage(msg) {
    const chatMessages = document.getElementById('chatMessages');
    const isCurrentUser = msg.senderId == currentUserId;

    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${isCurrentUser ? 'sent' : 'received'}`;

    messageDiv.innerHTML = `
      <div class="message-content">
        ${!isCurrentUser ? `<div class="sender-name">${msg.senderName}</div>` : ''}
        <div class="message-text">${msg.message}</div>
        <div class="message-time">${new Date(msg.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>
      </div>
    `;

    chatMessages.appendChild(messageDiv);
  }
// rating script

// Rating System
document.addEventListener('DOMContentLoaded', async () => {
    const productId = '<%= product.id %>';
    const currentUser =  typeof user !== 'undefined' ? JSON.stringify(user) : 'null';
    
    // Load initial ratings
    await loadRatings(productId);
    
    // Setup rating form if user is logged in
    if (currentUser) {
      document.getElementById('ratingForm')?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = {
          productId: formData.get('productId'),
          rating: formData.get('rating'),
          comment: formData.get('comment')
        };
        
        try {
          const response = await fetch('/api/ratings', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          });
          
          const result = await response.json();
          if (result.success) {
            e.target.reset();
          }
        } catch (error) {
          console.error('Rating submission error:', error);
        }
      });
    }
    
    // Listen for real-time rating updates
    socket.on('ratingUpdate', (data) => {
      if (data.productId == productId) {
        updateRatingDisplay(data.average, data.count);
        renderRatings(data.ratings);
      }
    });
  });

async function loadRatings(productId) {
  try {
    const response = await fetch(`/api/ratings/${productId}`);
    const data = await response.json();
    
    updateRatingDisplay(data.average, data.count);
    renderRatings(data.ratings);
  } catch (error) {
    console.error('Error loading ratings:', error);
  }
}

function updateRatingDisplay(average, count) {
  document.getElementById('averageRating').textContent = average;
  document.getElementById('ratingCount').textContent = `(${count} review${count !== 1 ? 's' : ''})`;
  
  // Update star display
  const starsContainer = document.getElementById('averageStars');
  starsContainer.innerHTML = '';
  
  const fullStars = Math.floor(average);
  const hasHalfStar = average % 1 >= 0.5;
  
  for (let i = 0; i < 5; i++) {
    const star = document.createElement('span');
    if (i < fullStars) {
      star.innerHTML = '★';
      star.className = 'text-warning';
    } else if (i === fullStars && hasHalfStar) {
      star.innerHTML = '½';
      star.className = 'text-warning';
    } else {
      star.innerHTML = '☆';
      star.className = 'text-muted';
    }
    starsContainer.appendChild(star);
  }
}

function renderRatings(ratings) {
  const container = document.getElementById('ratingsList');
  container.innerHTML = '';
  
  if (ratings.length === 0) {
    container.innerHTML = '<div class="alert alert-info">No ratings yet</div>';
    return;
  }
  
  ratings.forEach(rating => {
    const ratingEl = document.createElement('div');
    ratingEl.className = 'card mb-3 p-3';
    
    ratingEl.innerHTML = `
      <div class="d-flex justify-content-between mb-2">
        <div>
          <strong>${rating.user_name}</strong>
          <div class="rating-stars">
            ${'★'.repeat(rating.rating)}${'☆'.repeat(5 - rating.rating)}
          </div>
        </div>
        <small class="text-muted">
          ${new Date(rating.created_at).toLocaleDateString()}
          ${rating.created_at !== rating.updated_at ? '(edited)' : ''}
        </small>
      </div>
      ${rating.comment ? `<p>${rating.comment}</p>` : ''}
    `;
    
    container.appendChild(ratingEl);
  });
}

</script>

<!-- Chat Style -->
<style>
  .chat-container {
    height: 400px;
    display: flex;
    flex-direction: column;
  }

  .chat-messages {
    flex: 1;
    overflow-y: auto;
    background-color: #f8f9fa;
  }

  .chat-product-img {
    width: 50px;
    height: 50px;
    object-fit: cover;
  }

  .message {
    margin-bottom: 15px;
    max-width: 80%;
  }

  .message.sent {
    margin-left: auto;
  }

  .message.sent .message-content {
    background-color: #007bff;
    color: white;
    border-radius: 18px 18px 0 18px;
    padding: 8px 12px;
  }

  .message.received .message-content {
    background-color: white;
    border: 1px solid #dee2e6;
    border-radius: 18px 18px 18px 0;
    padding: 8px 12px;
  }

  .sender-name {
    font-weight: bold;
    font-size: 0.8rem;
    margin-bottom: 2px;
  }

  .message-time {
    font-size: 0.7rem;
    text-align: right;
    opacity: 0.7;
    margin-top: 3px;
  }
  /* Rating System Styles */
.rating-input {
  display: flex;
  flex-direction: row-reverse;
  justify-content: flex-end;
}

.rating-input input {
  display: none;
}

.rating-input label {
  color: #ddd;
  font-size: 2rem;
  padding: 0 0.1em;
  cursor: pointer;
  transition: color 0.2s;
}

.rating-input input:checked ~ label,
.rating-input input:checked ~ label ~ label {
  color: #ffc107;
}

.rating-input input:not(:checked) ~ label:hover,
.rating-input input:not(:checked) ~ label:hover ~ label {
  color: #ffdb70;
}

.rating-stars {
  color: #ffc107;
  font-size: 1.2rem;
  letter-spacing: 0.1em;
}

.rating-stars .text-muted {
  color: #ddd !important;
}
</style>

<%- include('../partials/footer') %>
